version=pmwiki-2.2.107 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36
author=
charset=UTF-8
csum=
ctime=1529959471
host=192.168.3.2
name=ビルドツール.GN-実行順
rev=20
targets=
text=!gn help execution%0aビルドグラフと実行の外観%0a%0a!!全体的なビルドの流れ%0a#カレントディレクトリから'''.gn'''ファイルを探す（'''"gn help dotfile"'''を参照）、見つからなければ１つずつディレクトリを上へ移動していって探す。ファイルが見つかったディレクトリが'''ソースルート'''になる。%0a%0a#'''.gn'''を実行して、グローバル設定とデフォルトのツールチェインを設定する。このファイルでの設定はビルド中に参照できる。%0a%0a#'''//BUILD.ng'''をロードする（ソースルートディレクトリで）。%0a%0a#再帰的にルールを評価し、依存を解決するための他のディレクトリ'''''BUILD.gn'''''をロードする。BUILDファイルが見つからないとGNは'''''secondary_source''''' を探す。（dotfileで定義される。（"gn help dotfile"参照）%0a%0a#ターゲットの依存が解決されるとき、'''.ninja'''ファイルがディスクに書き込まれる。%0a%0a#すべてのターゲットが解決されたとき、ルートの'''build.ninja'''ファイルが書き込まれる。%0a%0a!!ターゲット定義とテンプレートの実行%0aビルドファイルはパラレルにロードされる。これによりラベル（"gn help labels"を参照）から得られる情報以外はGNコードから取得できない。例外は''get_target_outputs()''であり、これは調査されるターゲットが同じファイル内で事前に定義されていることを必要とする。%0a%0aターゲットはタイプと名前で宣言される%0a[@%0astatic_library("my_static_library") {%0a  ... targe parameter definitions ...%0a}%0a@]%0a%0aこれとは別の一般的'''''target'''''関数もあり、プログラム的にタイプを定義できる（'''"gn help target"'''を参照）。テンプレートを使って新しいタイプを定義できる（"gn help template"参照）。テンプレートはカスタムコードを定義し、他のターゲットへ拡張する。%0a%0aターゲットの{ }を実行する前に、ターゲットデフォルトが適用される（'''"gn help set_defaults"'''参照）。このデフォルト値は典型的にはグローバルなコンパイルフラグやリンクフラグである。%0a%0a!!どのターゲットがビルドされるか%0aデフォルトツールチェインで遭遇したすべてのターゲットに対してビルドルールが作成される。全く参照されないターゲットでも同様である。これらの依存は解決され暗黙の''all''ルールに追加される（'''"gn help ninja_rules"'''参照）。%0a%0aデフォルトでないツールチェインのターゲットはそれらがデフォルトのビルドのターゲットで必要なときのみビルドされる。%0a%0a'''"gn help ninja-rules"'''も参照。%0a%0a!!依存関係%0a'''"public_deps"'''と'''"deps"'''の違いは'''config'''をビルドツリーにプッシュするかどうかと、'''"gn check"'''のためにincludesを許可するかどうかである。%0a%0aターゲットの'''"data_deps"'''はターゲットがビルドされるときは常にビルドされるが、順番は定義されない。これは実行時に必要とされることを意味する。現在データ依存はターゲットがリンクされる前にリンクされるが、これは意味的に保証されず、パフォーマンスからも好ましくない。そのうちに変えたいと思っているのでこの動作を頼りにしないこと。%0a%0a-----%0a終了：2018/07/08 (日) 17:19:29
time=1531037972
author:1531037972=
diff:1531037972:1531037954:=42,44d41%0a%3c %0a%3c -----%0a%3c 終了：2018/07/08 (日) 17:19:29%0a\ No newline at end of file%0a
host:1531037972=192.168.3.2
author:1531037954=
diff:1531037954:1531037220:=39,41c39%0a%3c '''"public_deps"'''と'''"deps"'''の違いは'''config'''をビルドツリーにプッシュするかどうかと、'''"gn check"'''のためにincludesを許可するかどうかである。%0a%3c %0a%3c ターゲットの'''"data_deps"'''はターゲットがビルドされるときは常にビルドされるが、順番は定義されない。これは実行時に必要とされることを意味する。現在データ依存はターゲットがリンクされる前にリンクされるが、これは意味的に保証されず、パフォーマンスからも好ましくない。そのうちに変えたいと思っているのでこの動作を頼りにしないこと。%0a---%0a> ＜省略＞%0a
host:1531037954=192.168.3.2
author:1531037220=
diff:1531037220:1531037201:=36c36%0a%3c '''"gn help ninja-rules"'''も参照。%0a---%0a> '''gn help ninja-rules'''も参照。%0a
host:1531037220=192.168.3.2
author:1531037201=
diff:1531037201:1531037171:=26,27c26%0a%3c %0a%3c これとは別の一般的'''''target'''''関数もあり、プログラム的にタイプを定義できる（'''"gn help target"'''を参照）。テンプレートを使って新しいタイプを定義できる（"gn help template"参照）。テンプレートはカスタムコードを定義し、他のターゲットへ拡張する。%0a---%0a> これとは別の一般的''target''関数もあり、プログラム的にタイプを定義できる（'''"gn help target"'''を参照）。テンプレートを使って新しいタイプを定義できる（"gn help template"参照）。テンプレートはカスタムコードを定義し、他のターゲットへ拡張する。%0a
host:1531037201=192.168.3.2
author:1531037171=
diff:1531037171:1531037112:=5,6c5,6%0a%3c #カレントディレクトリから'''.gn'''ファイルを探す（'''"gn help dotfile"'''を参照）、見つからなければ１つずつディレクトリを上へ移動していって探す。ファイルが見つかったディレクトリが'''ソースルート'''になる。%0a%3c %0a---%0a> #カレントディレクトリから'''.gn'''ファイルを探す（''gn help dotfile''を参照）、見つからなければ１つずつディレクトリを上へ移動していって探す。ファイルが見つかったディレクトリが'''ソースルート'''になる。%0a> %0a11c11%0a%3c #再帰的にルールを評価し、依存を解決するための他のディレクトリ'''''BUILD.gn'''''をロードする。BUILDファイルが見つからないとGNは'''''secondary_source''''' を探す。（dotfileで定義される。（"gn help dotfile"参照）%0a---%0a> #再帰的にルールを評価し、依存を解決するための他のディレクトリ'''BUILD.gn'''をロードする。BUILDファイルが見つからないとGNは''''secondary_source'''' '''''bold italics''''' を探す。（dotfileで定義される。（"gn help dotfile"参照）%0a
host:1531037171=192.168.3.2
author:1531037112=
diff:1531037112:1531037088:=11c11%0a%3c #再帰的にルールを評価し、依存を解決するための他のディレクトリ'''BUILD.gn'''をロードする。BUILDファイルが見つからないとGNは''''secondary_source'''' '''''bold italics''''' を探す。（dotfileで定義される。（"gn help dotfile"参照）%0a---%0a> #再帰的にルールを評価し、依存を解決するための他のディレクトリ'''BUILD.gn'''をロードする。BUILDファイルが見つからないとGNは''''secondary_source''''を探す。（dotfileで定義される。（"gn help dotfile"参照）%0a
host:1531037112=192.168.3.2
author:1531037088=
diff:1531037088:1531037059:=11c11%0a%3c #再帰的にルールを評価し、依存を解決するための他のディレクトリ'''BUILD.gn'''をロードする。BUILDファイルが見つからないとGNは''''secondary_source''''を探す。（dotfileで定義される。（"gn help dotfile"参照）%0a---%0a> #再帰的にルールを評価し、依存を解決するための他のディレクトリ'''BUILD.gn'''をロードする。BUILDファイルが見つからないとGNは''secondary_source''を探す。（dotfileで定義される。（"gn help dotfile"参照）%0a
host:1531037088=192.168.3.2
author:1531037059=
diff:1531037059:1531037000:=26,29c26,29%0a%3c これとは別の一般的''target''関数もあり、プログラム的にタイプを定義できる（'''"gn help target"'''を参照）。テンプレートを使って新しいタイプを定義できる（"gn help template"参照）。テンプレートはカスタムコードを定義し、他のターゲットへ拡張する。%0a%3c %0a%3c ターゲットの{ }を実行する前に、ターゲットデフォルトが適用される（'''"gn help set_defaults"'''参照）。このデフォルト値は典型的にはグローバルなコンパイルフラグやリンクフラグである。%0a%3c %0a---%0a> これとは別の一般的''target''関数もあり、プログラム的にタイプを定義できる（"gn help target"を参照）。テンプレートを使って新しいタイプを定義できる（"gn help template"参照）。テンプレートはカスタムコードを定義し、他のターゲットへ拡張する。%0a> %0a> ターゲットの{ }を実行する前に、ターゲットデフォルトが適用される（"gn help set_defaults"参照）。このデフォルト値は典型的にはグローバルなコンパイルフラグやリンクフラグである。%0a> %0a31c31%0a%3c デフォルトツールチェインで遭遇したすべてのターゲットに対してビルドルールが作成される。全く参照されないターゲットでも同様である。これらの依存は解決され暗黙の''all''ルールに追加される（'''"gn help ninja_rules"'''参照）。%0a---%0a> デフォルトツールチェインで遭遇したすべてのターゲットに対してビルドルールが作成される。全く参照されないターゲットでも同様である。これらの依存は解決され暗黙の''all''ルールに追加される（"gn help ninja_rules"参照）。%0a
host:1531037059=192.168.3.2
author:1531037000=
diff:1531037000:1529974324:=21c21%0a%3c [@%0a---%0a>  [=%0a25c25%0a%3c @]%0a---%0a> =]%0a35c35%0a%3c '''gn help ninja-rules'''も参照。%0a---%0a> "gn help ninja-rules"も参照。%0a
host:1531037000=192.168.3.2
author:1529974324=
diff:1529974324:1529974193:=38c38%0a%3c ＜省略＞%0a---%0a> %0a
host:1529974324=192.168.3.2
author:1529974193=
diff:1529974193:1529973185:=32,37d31%0a%3c %0a%3c デフォルトでないツールチェインのターゲットはそれらがデフォルトのビルドのターゲットで必要なときのみビルドされる。%0a%3c %0a%3c "gn help ninja-rules"も参照。%0a%3c %0a%3c !!依存関係%0a
host:1529974193=192.168.3.2
author:1529973185=
diff:1529973185:1529968506:=31d30%0a%3c デフォルトツールチェインで遭遇したすべてのターゲットに対してビルドルールが作成される。全く参照されないターゲットでも同様である。これらの依存は解決され暗黙の''all''ルールに追加される（"gn help ninja_rules"参照）。%0a
host:1529973185=192.168.3.2
author:1529968506=
diff:1529968506:1529963490:=26,30d25%0a%3c これとは別の一般的''target''関数もあり、プログラム的にタイプを定義できる（"gn help target"を参照）。テンプレートを使って新しいタイプを定義できる（"gn help template"参照）。テンプレートはカスタムコードを定義し、他のターゲットへ拡張する。%0a%3c %0a%3c ターゲットの{ }を実行する前に、ターゲットデフォルトが適用される（"gn help set_defaults"参照）。このデフォルト値は典型的にはグローバルなコンパイルフラグやリンクフラグである。%0a%3c %0a%3c !!どのターゲットがビルドされるか%0a
host:1529968506=192.168.3.2
author:1529963490=
diff:1529963490:1529962962:=21c21%0a%3c  [=%0a---%0a> =gn [=%0a
host:1529963490=192.168.3.2
author:1529962962=
diff:1529962962:1529962002:=18,26c18%0a%3c ビルドファイルはパラレルにロードされる。これによりラベル（"gn help labels"を参照）から得られる情報以外はGNコードから取得できない。例外は''get_target_outputs()''であり、これは調査されるターゲットが同じファイル内で事前に定義されていることを必要とする。%0a%3c %0a%3c ターゲットはタイプと名前で宣言される%0a%3c =gn [=%0a%3c static_library("my_static_library") {%0a%3c   ... targe parameter definitions ...%0a%3c }%0a%3c =]%0a%3c %0a---%0a> ビルドファイルはパラレルにロードされる。これによりラベル（"gn help labels"を参照）から得られる情報以外はGNコードから取得できない。実行は''get_target_outputs()''であり、これは%0a\ No newline at end of file%0a
host:1529962962=192.168.3.2
author:1529962002=
diff:1529962002:1529960126:=18c18%0a%3c ビルドファイルはパラレルにロードされる。これによりラベル（"gn help labels"を参照）から得られる情報以外はGNコードから取得できない。実行は''get_target_outputs()''であり、これは%0a\ No newline at end of file%0a---%0a> ビルドファイルはパラレルにロードされる。%0a\ No newline at end of file%0a
host:1529962002=192.168.3.2
author:1529960126=
diff:1529960126:1529959496:=9,18d8%0a%3c #'''//BUILD.ng'''をロードする（ソースルートディレクトリで）。%0a%3c %0a%3c #再帰的にルールを評価し、依存を解決するための他のディレクトリ'''BUILD.gn'''をロードする。BUILDファイルが見つからないとGNは''secondary_source''を探す。（dotfileで定義される。（"gn help dotfile"参照）%0a%3c %0a%3c #ターゲットの依存が解決されるとき、'''.ninja'''ファイルがディスクに書き込まれる。%0a%3c %0a%3c #すべてのターゲットが解決されたとき、ルートの'''build.ninja'''ファイルが書き込まれる。%0a%3c %0a%3c !!ターゲット定義とテンプレートの実行%0a%3c ビルドファイルはパラレルにロードされる。%0a\ No newline at end of file%0a
host:1529960126=192.168.3.2
author:1529959496=
diff:1529959496:1529959487:=7c7%0a%3c #'''.gn'''を実行して、グローバル設定とデフォルトのツールチェインを設定する。このファイルでの設定はビルド中に参照できる。%0a---%0a> # '''.gn'''を実行して、グローバル設定とデフォルトのツールチェインを設定する。このファイルでの設定はビルド中に参照できる。%0a
host:1529959496=192.168.3.2
author:1529959487=
diff:1529959487:1529959471:=5c5%0a%3c #カレントディレクトリから'''.gn'''ファイルを探す（''gn help dotfile''を参照）、見つからなければ１つずつディレクトリを上へ移動していって探す。ファイルが見つかったディレクトリが'''ソースルート'''になる。%0a---%0a> # カレントディレクトリから'''.gn'''ファイルを探す（''gn help dotfile''を参照）、見つからなければ１つずつディレクトリを上へ移動していって探す。ファイルが見つかったディレクトリが'''ソースルート'''になる。%0a
host:1529959487=192.168.3.2
author:1529959471=
diff:1529959471:1529959471:=1,8d0%0a%3c !gn help execution%0a%3c ビルドグラフと実行の外観%0a%3c %0a%3c !!全体的なビルドの流れ%0a%3c # カレントディレクトリから'''.gn'''ファイルを探す（''gn help dotfile''を参照）、見つからなければ１つずつディレクトリを上へ移動していって探す。ファイルが見つかったディレクトリが'''ソースルート'''になる。%0a%3c %0a%3c # '''.gn'''を実行して、グローバル設定とデフォルトのツールチェインを設定する。このファイルでの設定はビルド中に参照できる。%0a%3c %0a
host:1529959471=192.168.3.2
