version=pmwiki-2.2.107 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36
author=
charset=UTF-8
csum=
ctime=1531992604
host=192.168.3.2
name=デザイン.メディアルータ
rev=3
targets=
text=https://www.chromium.org/developers/design-documents/media-router%0a%0a!メディアルータとウェブプレゼンAPI%0aメディアルータはChromeのコンポーネントで、ブラウザ外にあるコンテントをレンダリングするためクライアント同士を結びつける。ブラウザをmedia sourceと呼び、そのコンテントをレンダリングできる端点をmedia sinkと呼ぶ。メディアソースとメディアシンクがリンクされると（一般的にはユーザの許可が必要）、メディアルートが作成され、クライアントとシンクでの２方向のメッセージングが可能になる。メディアルートによりクライアントはメッセージを介してピアツーピアでシンクとやり取りできる（[[http://www.webrtc.org/|WebRTC]]や[[https://code.google.com/p/chromium/codesearch#chromium/src/chrome/renderer/extensions/cast_streaming_native_handler.h&q=cast_streaming&sq=package:chromium&type=cs|Cast Streaming]]など通常「ミラーリング」と呼ばれるものを経由して）。メディアルートを使ってリモートでレンダリングされたメディアをピアツーピアセッション無しで制御する「flinging」も可能である。メディアルートはユーザやクライアントや要求で終了し、それ以降はアクセスできない。 %0a%0a[[http://www.w3.org/2014/secondscreen/|ウェブプレゼンAPI]]によりウェブアプリはそのコンテントを２番めのスクリーン（有線、無線を問わず）で描画することを要求できる。コンテントはローカルでレンダリングされスクリーンに送られるかもしれないし、リモートでレンダリングされるかもしれない。ウェブアプリはコンテントを２方向のメッセージングで制御できる。%0a%0aBlinkの一部ではないメディアルータはデスクトップのChromeとChromeOSのみで実装されることに注意すること。プレゼンAPIの機能はAndroidのChromeではそれと似たようなプラットフォームのコンポーネント（Android Media Route Providerフレームワークなど）をつかって実装される予定である。%0a %0a!目標%0aこのプロジェクトの目標：%0a* 多くのクライアントからのメディアシンク利用を可能にする：プレゼンAPI経由、Chromeアプリ経由、ブラウザ本体経由、ChromeOSのシステムコール経由のウェブアプリ%0a* ローカルでレンダリングされたコンテントのミラーリングから外部スクリーンへのサポート。外部スクリーンはオンスクリーンやオフスクリーンのタブ、Chromeアプリのウインドウ、そしてシステムデスクトップ。%0a* HTML5ドキュメントをリモートのレンダリングデバイスへ「flinging」することをサポート%0a* デスクトップやAndroidのCast Chrome Sender SDKを拡張のインストールなしでサポート%0a* 追加のMedia Route　Providerの実装による新しいタイプのメディアシークをChromeへ追加することを許可%0a%0a以下は今は目標ではないがそのうちに目標になるかもしれないもの：%0a* ローカルコンテントの多数のシンクへの同時マルチキャスト%0a* サードパーティのメディアルートプロバイダ（JavascriptやNaCl内）のサポートと実行時のメディルートプロバイダのインストールのサポート%0a* メディアのレンダリングが主目的ではないシンクのサポート%0a%0a!概観%0aメディアルータは４つの部分に分かれる。%0a%0a# Chrome Media RouterはC++API経由のインプロセスで公開されたサービスで、外部プロセスへは２つのMojoインターフェース（PresentationインタフェースとMedia Router APIインタフェース）を経由して公開される：その仕事はクライアントからのメディアシーク利用可能性問い合わせの返答、メディアルートの構築と破棄、メッセージングを使ったメディアルート制御。Media Router Dialog制御や、Media Routerコンポーネント拡張のための多くの関数のデリゲートも行う。%0a%0a# Media Router拡張は外部コンポーネント拡張で、メディアシンクと対話する。コンポーネント拡張はCastやDIALデバイス利用のサポートをすることになるが、時間の経過とともに他のタイプのシンクも追加される。%0a The component extension interacts with the Chrome Media Router via the Media Router API Mojo service, and uses some chrome.* platform APIs, such as chrome.dial, chrome.cast.channel, and chrome.mdns to implement network level interaction with Cast and DIAL devices.%0a3.Users interact with the Chrome Media Router through the Media Router Dialog.  This WebUI component allows users to choose the destination media sink for new media routes and view and stop active media routes.  It may be pulled up by the user clicking the Cast icon in the browser toolbar, or at the request of a Web application via the Presentation API.%0a4.The Presentation Mojo interface acts as a bridge between the Chrome Media Router and the Blink implementation of the Presentation API (launch bug).%0a%0a!アーキテクチャ%0a以下の図は上で記したコンポーネントのアーキテクチャである。%0a%0ahttps://www.chromium.org/developers/design-documents/media-router/Chrome%2520Media%2520Router%2520Architecture%2520%25281%2529.png%0a%0a!Chrome Media Router%0a%0a
time=1531992678
author:1531992678=
diff:1531992678:1531992657:=36c36%0a%3c https://www.chromium.org/developers/design-documents/media-router/Chrome%2520Media%2520Router%2520Architecture%2520%25281%2529.png%0a---%0a> https://www.chromium.org/developers/design-documents/media-router/Chrome%2520Media%2520Router%2520Architecture%2520%25281%2529.png?attredirects=0?.png%0a
host:1531992678=192.168.3.2
author:1531992657=
diff:1531992657:1531992604:=3c3%0a%3c !メディアルータとウェブプレゼンAPI%0a---%0a> !メディアルータとウェブプセゼンAPI%0a36c36%0a%3c https://www.chromium.org/developers/design-documents/media-router/Chrome%2520Media%2520Router%2520Architecture%2520%25281%2529.png?attredirects=0?.png%0a---%0a> https://www.chromium.org/developers/design-documents/media-router/Chrome%2520Media%2520Router%2520Architecture%2520%25281%2529.png?attredirects=0#.png%0a
host:1531992657=192.168.3.2
author:1531992604=
diff:1531992604:1531992604:=1,39d0%0a%3c https://www.chromium.org/developers/design-documents/media-router%0a%3c %0a%3c !メディアルータとウェブプセゼンAPI%0a%3c メディアルータはChromeのコンポーネントで、ブラウザ外にあるコンテントをレンダリングするためクライアント同士を結びつける。ブラウザをmedia sourceと呼び、そのコンテントをレンダリングできる端点をmedia sinkと呼ぶ。メディアソースとメディアシンクがリンクされると（一般的にはユーザの許可が必要）、メディアルートが作成され、クライアントとシンクでの２方向のメッセージングが可能になる。メディアルートによりクライアントはメッセージを介してピアツーピアでシンクとやり取りできる（[[http://www.webrtc.org/|WebRTC]]や[[https://code.google.com/p/chromium/codesearch#chromium/src/chrome/renderer/extensions/cast_streaming_native_handler.h&q=cast_streaming&sq=package:chromium&type=cs|Cast Streaming]]など通常「ミラーリング」と呼ばれるものを経由して）。メディアルートを使ってリモートでレンダリングされたメディアをピアツーピアセッション無しで制御する「flinging」も可能である。メディアルートはユーザやクライアントや要求で終了し、それ以降はアクセスできない。 %0a%3c %0a%3c [[http://www.w3.org/2014/secondscreen/|ウェブプレゼンAPI]]によりウェブアプリはそのコンテントを２番めのスクリーン（有線、無線を問わず）で描画することを要求できる。コンテントはローカルでレンダリングされスクリーンに送られるかもしれないし、リモートでレンダリングされるかもしれない。ウェブアプリはコンテントを２方向のメッセージングで制御できる。%0a%3c %0a%3c Blinkの一部ではないメディアルータはデスクトップのChromeとChromeOSのみで実装されることに注意すること。プレゼンAPIの機能はAndroidのChromeではそれと似たようなプラットフォームのコンポーネント（Android Media Route Providerフレームワークなど）をつかって実装される予定である。%0a%3c  %0a%3c !目標%0a%3c このプロジェクトの目標：%0a%3c * 多くのクライアントからのメディアシンク利用を可能にする：プレゼンAPI経由、Chromeアプリ経由、ブラウザ本体経由、ChromeOSのシステムコール経由のウェブアプリ%0a%3c * ローカルでレンダリングされたコンテントのミラーリングから外部スクリーンへのサポート。外部スクリーンはオンスクリーンやオフスクリーンのタブ、Chromeアプリのウインドウ、そしてシステムデスクトップ。%0a%3c * HTML5ドキュメントをリモートのレンダリングデバイスへ「flinging」することをサポート%0a%3c * デスクトップやAndroidのCast Chrome Sender SDKを拡張のインストールなしでサポート%0a%3c * 追加のMedia Route　Providerの実装による新しいタイプのメディアシークをChromeへ追加することを許可%0a%3c %0a%3c 以下は今は目標ではないがそのうちに目標になるかもしれないもの：%0a%3c * ローカルコンテントの多数のシンクへの同時マルチキャスト%0a%3c * サードパーティのメディアルートプロバイダ（JavascriptやNaCl内）のサポートと実行時のメディルートプロバイダのインストールのサポート%0a%3c * メディアのレンダリングが主目的ではないシンクのサポート%0a%3c %0a%3c !概観%0a%3c メディアルータは４つの部分に分かれる。%0a%3c %0a%3c # Chrome Media RouterはC++API経由のインプロセスで公開されたサービスで、外部プロセスへは２つのMojoインターフェース（PresentationインタフェースとMedia Router APIインタフェース）を経由して公開される：その仕事はクライアントからのメディアシーク利用可能性問い合わせの返答、メディアルートの構築と破棄、メッセージングを使ったメディアルート制御。Media Router Dialog制御や、Media Routerコンポーネント拡張のための多くの関数のデリゲートも行う。%0a%3c %0a%3c # Media Router拡張は外部コンポーネント拡張で、メディアシンクと対話する。コンポーネント拡張はCastやDIALデバイス利用のサポートをすることになるが、時間の経過とともに他のタイプのシンクも追加される。%0a%3c  The component extension interacts with the Chrome Media Router via the Media Router API Mojo service, and uses some chrome.* platform APIs, such as chrome.dial, chrome.cast.channel, and chrome.mdns to implement network level interaction with Cast and DIAL devices.%0a%3c 3.Users interact with the Chrome Media Router through the Media Router Dialog.  This WebUI component allows users to choose the destination media sink for new media routes and view and stop active media routes.  It may be pulled up by the user clicking the Cast icon in the browser toolbar, or at the request of a Web application via the Presentation API.%0a%3c 4.The Presentation Mojo interface acts as a bridge between the Chrome Media Router and the Blink implementation of the Presentation API (launch bug).%0a%3c %0a%3c !アーキテクチャ%0a%3c 以下の図は上で記したコンポーネントのアーキテクチャである。%0a%3c %0a%3c https://www.chromium.org/developers/design-documents/media-router/Chrome%2520Media%2520Router%2520Architecture%2520%25281%2529.png?attredirects=0#.png%0a%3c %0a%3c !Chrome Media Router%0a%3c %0a
host:1531992604=192.168.3.2
